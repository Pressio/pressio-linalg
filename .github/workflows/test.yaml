name: Install and test pressio-linalg

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.event.repository.name }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: True

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # true -> cancel all jobs if any fails
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        mpi: ['mpich','openmpi']
        exclude:
          - python-version: "3.8"
            mpi: 'mpich'
          - python-version: "3.9"
            mpi: 'mpich'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup MPI
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}

      # - name: Setup Miniconda
      #   uses: conda-incubator/setup-miniconda@v2.2.0
      #   with:
      #     miniconda-version: "latest"
      #     python-version: ${{ matrix.python-version }}

      # - name: Setup mpi4py
      #   run: |
      #     python -m pip install --upgrade pip
      #     conda install -c conda-forge mpi4py ${{ matrix.mpi }}

      - name: Set Environment Variables
        run: |
          echo "OMPI_ALLOW_RUN_AS_ROOT=1" >> $GITHUB_ENV
          echo "OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1" >> $GITHUB_ENV
          echo "MPI_BASE_DIR=$(dirname $(which mpicxx))" >> $GITHUB_ENV
          echo "MPI4PY_INCLUDE_DIR=$(python -c 'import mpi4py; print(mpi4py.get_include())')" >> $GITHUB_ENV

      - name: Check environment
        run: |
          echo ======================================================
          echo CPU Threads: $(grep -c processor /proc/cpuinfo)
          echo ======================================================
          echo ======================================================
          echo $(which python) --version
          python --version
          echo ======================================================
          echo $(which pip) --version
          python --version
          echo ======================================================
          git --version
          echo $PWD
          echo $GITHUB_WORKSPACE
          git status

      - name: Install package (Light mode)
        run: |
          echo $PWD
          python -m pip install --upgrade pip
          pip list
          pip install .

      - name: Run tests (Light mode, MPI, n=3)
        run: |
          mpirun -n 3 python -m pytest tests/* --with-mpi

      - name: Install package (C++ Bindings)
        run: |
          echo $PWD
          python -m pip install --upgrade pip
          pip list
          PRESSIO_LINALG_CPP=1 pip install .

      - name: Run tests (C++ Bindings, MPI, n=3)
        run: |
          mpirun -n 3 python -m pytest tests/* --with-mpi
